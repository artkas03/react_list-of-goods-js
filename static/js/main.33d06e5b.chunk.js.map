{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_BY_ALPHABETIC","SORT_BY_LENGTH","goodsFromServer","App","useState","sortBy","setSortBy","isReversed","setIsReversed","isChanged","setIsChanged","goods","goodList","isNeedReverse","goodListCopy","sort","good1","good2","localeCompare","length","reverse","sortGoodsBy","resetButton","type","className","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKMA,EAAqB,YACrBC,EAAiB,SAEVC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0BK,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACMC,EA3BR,SAAqBC,EAAUP,EAAQQ,GACrC,IAAMC,EAAY,YAAOF,GAmBzB,OAjBAE,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQZ,GACN,IAAM,YACJ,OAAOW,EAAME,cAAcD,GAE7B,IAAM,SACJ,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITN,GACFC,EAAaM,UAGRN,EAOOO,CAAYnB,EAAiBG,EAAQE,GAE7Ce,EACJ,wBACEC,KAAK,SACLC,UAAU,4BACVC,QAAS,WACPnB,EAAU,IACVE,GAAc,GACdE,GAAa,IANjB,mBAaF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYrB,IAAWL,IAEzByB,QAAS,WACPnB,EAAUN,GACVU,GAAa,IAPjB,iCAaA,wBACEa,KAAK,SACLC,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYrB,IAAWJ,IAEzBwB,QAAS,WACPnB,EAAUL,GACVS,GAAa,IAPjB,4BAaA,wBACEa,KAAK,SACLC,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAanB,IAEfkB,QAAS,WACPjB,GAAeD,GACfG,GAAcH,GAAcF,IAPhC,qBAaCI,EAAYa,EAAc,MAG7B,6BACGX,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC5GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.33d06e5b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nconst SORT_BY_ALPHABETIC = 'alpabetic';\nconst SORT_BY_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction sortGoodsBy(goodList, sortBy, isNeedReverse) {\n  const goodListCopy = [...goodList];\n\n  goodListCopy.sort((good1, good2) => {\n    switch (sortBy) {\n      case ('alpabetic'):\n        return good1.localeCompare(good2);\n\n      case ('length'):\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isNeedReverse) {\n    goodListCopy.reverse();\n  }\n\n  return goodListCopy;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const [isChanged, setIsChanged] = useState(false);\n  const goods = sortGoodsBy(goodsFromServer, sortBy, isReversed);\n\n  const resetButton = (\n    <button\n      type=\"button\"\n      className=\"button is-danger is-light\"\n      onClick={() => {\n        setSortBy('');\n        setIsReversed(false);\n        setIsChanged(false);\n      }}\n    >\n      Reset\n    </button>\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortBy !== SORT_BY_ALPHABETIC,\n          })}\n          onClick={() => {\n            setSortBy(SORT_BY_ALPHABETIC);\n            setIsChanged(true);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortBy !== SORT_BY_LENGTH,\n          })}\n          onClick={() => {\n            setSortBy(SORT_BY_LENGTH);\n            setIsChanged(true);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => {\n            setIsReversed(!isReversed);\n            setIsChanged(!isReversed || sortBy);\n          }}\n        >\n          Reverse\n        </button>\n\n        {isChanged ? resetButton : ''}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}