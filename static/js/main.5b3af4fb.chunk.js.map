{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_BY","goodsFromServer","App","useState","sortBy","setSortBy","isReversed","setIsReversed","isShowResetButton","goods","goodList","isNeedReverse","goodListCopy","sort","good1","good2","localeCompare","length","reverse","sortGoodsBy","resetButton","type","className","onClick","cn","currentIsReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKMA,EACM,UADNA,EAEI,SAGGC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0BK,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAoBJ,GAAUE,EAC9BG,EA3BR,SAAqBC,EAAUN,EAAQO,GACrC,IAAMC,EAAY,YAAOF,GAmBzB,OAjBAE,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQX,GACN,KAAMJ,EACJ,OAAOc,EAAME,cAAcD,GAE7B,KAAMf,EACJ,OAAOc,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITN,GACFC,EAAaM,UAGRN,EAOOO,CAAYlB,EAAiBG,EAAQE,GAOnD,IAAMc,EACJ,wBACEC,KAAK,SACLC,UAAU,4BACVC,QAAS,kBARXlB,EAAU,SACVE,GAAc,IAId,mBASF,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYpB,IAAWJ,IAEzBuB,QAAS,kBAAMlB,EAAUL,IAL3B,iCAUA,wBACEqB,KAAK,SACLC,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYpB,IAAWJ,IAEzBuB,QAAS,kBAAMlB,EAAUL,IAL3B,4BAUA,wBACEqB,KAAK,SACLC,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAalB,IAEfiB,QAAS,kBAAMhB,GAAc,SAAAkB,GAAiB,OAAKA,MALrD,qBAUCjB,GAAqBY,KAGxB,6BACGX,EAAMiB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCtGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b3af4fb.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nconst SORT_BY = {\n  ALPHABET: 'alpabet',\n  LENGTH: 'length',\n};\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction sortGoodsBy(goodList, sortBy, isNeedReverse) {\n  const goodListCopy = [...goodList];\n\n  goodListCopy.sort((good1, good2) => {\n    switch (sortBy) {\n      case (SORT_BY.ALPHABET):\n        return good1.localeCompare(good2);\n\n      case (SORT_BY.LENGTH):\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isNeedReverse) {\n    goodListCopy.reverse();\n  }\n\n  return goodListCopy;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const isShowResetButton = sortBy || isReversed;\n  const goods = sortGoodsBy(goodsFromServer, sortBy, isReversed);\n\n  function resetClickHandler() {\n    setSortBy('');\n    setIsReversed(false);\n  }\n\n  const resetButton = (\n    <button\n      type=\"button\"\n      className=\"button is-danger is-light\"\n      onClick={() => resetClickHandler()}\n    >\n      Reset\n    </button>\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortBy !== SORT_BY.ALPHABET,\n          })}\n          onClick={() => setSortBy(SORT_BY.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortBy !== SORT_BY.LENGTH,\n          })}\n          onClick={() => setSortBy(SORT_BY.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(currentIsReversed => !currentIsReversed)}\n        >\n          Reverse\n        </button>\n\n        {isShowResetButton && resetButton}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}